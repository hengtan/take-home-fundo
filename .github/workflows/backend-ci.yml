name: Backend CI

on:
  push:
    paths:
      - 'backend/**'
  pull_request:
    paths:
      - 'backend/**'

jobs:
  build-and-test-backend:
    runs-on: ubuntu-latest

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2019-latest
        ports:
          - 1433:1433
        env:
          SA_PASSWORD: "Your_strong_Pass123"
          ACCEPT_EULA: "Y"
        options: >-
          --health-cmd="sqlcmd -S localhost -U sa -P 'Your_strong_Pass123' -Q 'SELECT 1'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=20

    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v4

      - name: 🧰 Setup .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: ⏳ Wait for SQL Server to be healthy
        run: |
          for i in {1..20}; do
            if /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'Your_strong_Pass123' -Q "SELECT 1" > /dev/null 2>&1; then
              echo "✅ SQL Server is ready!"
              exit 0
            fi
            echo "⏳ Waiting for SQL Server to be ready ($i/20)..."
            sleep 5
          done
          echo "❌ SQL Server did not become healthy in time"
          exit 1

      - name: 📦 Restore dependencies
        run: dotnet restore backend/src/src.sln

      - name: 🏗️ Build solution
        run: dotnet build backend/src/src.sln --no-restore --configuration Release

      - name: 🧪 Run tests (fail on error)
        run: dotnet test backend/src/src.sln --no-build --configuration Release --logger "trx"

      - name: 📤 Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: '**/TestResults/*.trx'