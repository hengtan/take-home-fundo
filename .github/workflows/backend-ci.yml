name: Fullstack CI

on:
  push:
    paths:
      - 'backend/**'
      - 'frontend/**'
  pull_request:
    paths:
      - 'backend/**'
      - 'frontend/**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          SA_PASSWORD: "Your_strong_Pass123"
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Setup Node.js (Angular)
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install sqlcmd tools
        run: |
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools unixodbc-dev
          echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
          source ~/.bashrc

      - name: Wait for SQL Server to be ready
        run: |
          echo "⌛ Esperando SQL Server iniciar..."
          for i in {1..20}; do
            if /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'Your_strong_Pass123' -Q "SELECT 1" > /dev/null 2>&1; then
              echo "✅ SQL Server está pronto!"
              exit 0
            fi
            echo "⏳ Tentativa $i: SQL ainda iniciando..."
            sleep 5
          done
          echo "❌ SQL Server não respondeu a tempo. Falhando a pipeline."
          exit 1

      - name: Restore .NET dependencies
        run: dotnet restore backend/src/src.sln

      - name: Build .NET solution
        run: dotnet build backend/src/src.sln --no-restore --configuration Release

      - name: Run .NET tests
        run: dotnet test backend/src/src.sln --no-build --configuration Release --logger "trx"

      - name: Upload .NET test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-results
          path: '**/TestResults/*.trx'

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Build frontend (Angular)
        run: |
          cd frontend
          npm run build

      - name: Run frontend tests (if present)
        run: |
          cd frontend
          npm test -- --watch=false --browsers=ChromeHeadless || exit 1